---
interface Props {
  label?: string;
  href?: string;
  size?: 'sm' | 'md' | 'lg';
  variant?: 'primary' | 'secondary' | 'accent' | 'ghost';
  class?: string;
  style?: string;
}
const {
  label = 'Get Started',
  href,
  size = 'md',
  variant = 'primary',
  class: className,
  style,
} = Astro.props as Props;

const asLink = typeof href === 'string' && href.length > 0;
---
{asLink ? (
  <a href={href} class={`cta variant-${variant} ${className ?? ''}`} data-size={size} style={style}>
    <span class="label">{label}</span>
    <span class="icon-wrap">
      <slot name="icon">
        <svg class="icon-arrow" viewBox="0 0 24 24" aria-hidden="true"><path d="M5 12h12M13 6l6 6-6 6" stroke="currentColor" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round" fill="none"/></svg>
      </slot>
    </span>
  </a>
) : (
  <button type="button" class={`cta variant-${variant} ${className ?? ''}`} data-size={size} style={style}>
    <span class="label">{label}</span>
    <span class="icon-wrap">
      <slot name="icon">
        <svg class="icon-arrow" viewBox="0 0 24 24" aria-hidden="true"><path d="M5 12h12M13 6l6 6-6 6" stroke="currentColor" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round" fill="none"/></svg>
      </slot>
    </span>
  </button>
)}

<style>
  .cta { display: inline-flex; align-items: center; justify-content: center; gap: 10px; border-radius: var(--radius-button); font-family: var(--font-sans); font-weight: 600; box-shadow: 0 10px 24px color-mix(in oklab, var(--foreground) 12%, transparent); cursor: pointer; transition: transform 200ms ease, box-shadow 300ms ease, background 200ms ease, color 200ms ease; text-decoration: none; }
  .cta[data-size="sm"] { padding: 10px 18px; font-size: var(--text-sm); }
  .cta[data-size="md"] { padding: 14px 24px; font-size: var(--text-base); }
  .cta[data-size="lg"] { padding: 16px 28px; font-size: var(--text-lg); }

  .variant-primary { background: var(--primary); color: var(--primary-foreground); }
  .variant-primary:hover { box-shadow: 0 14px 32px color-mix(in oklab, var(--primary) 30%, transparent); }
  .variant-secondary { background: var(--secondary); color: var(--secondary-foreground); }
  .variant-secondary:hover { box-shadow: 0 14px 32px color-mix(in oklab, var(--secondary) 30%, transparent); }
  .variant-accent { background: var(--accent); color: var(--accent-foreground); }
  .variant-accent:hover { box-shadow: 0 14px 32px color-mix(in oklab, var(--accent) 40%, transparent); }
  .variant-ghost { background: transparent; color: var(--foreground); border: 1px solid var(--border); }
  .variant-ghost:hover { background: color-mix(in oklab, var(--card) 94%, transparent); box-shadow: 0 12px 28px color-mix(in oklab, var(--foreground) 16%, transparent); }

  .label { line-height: 1; }
  .icon-wrap { display: inline-flex; align-items: center; }
  .icon-arrow { width: 20px; height: 20px; transition: transform 300ms ease; }
  .cta:hover .icon-arrow { transform: translateX(4px); }
  .cta:active { transform: scale(0.98); }
</style>