---
import Chip from '../../components/Chip--Basic.astro';
---
<section class="hero" aria-label="Neo Hero">
  <div class="container">
    <div class="content">
      <img class="app-icon" src="/appIcon__Neo.webp" alt="Neo App Icon" width="128" height="128" />
      <div class="left reveal" style="--delay: 0s">
        <h2 class="subtitle">The missing context layer for real Code Assistant workloads.</h2>
        <p class="copy">
          Neo is a self-improving code reasoning engine with persistent semantic memory, using multi-agent reasoning to analyze code, generate solutions, and continuously improve through feedback loops.
        </p>
      </div>


    </div>

    <div class="below-row">
      <div class="feature-tabs reveal" style="--delay: 0.15s">
        <nav class="tab-list" aria-label="Neo features">
          <button class="tab-btn" data-key="persistent-memory">Persistent Memory</button>
          <button class="tab-btn" data-key="semantic-retrieval">Semantic Retrieval</button>
          <button class="tab-btn" data-key="code-first-generation">Code-First Generation</button>
          <button class="tab-btn" data-key="local-storage">Local Storage</button>
          <button class="tab-btn" data-key="model-agnostic">Model-Agnostic</button>
          <button class="tab-btn" data-key="claude-code-plugin">Claude Code Plugin</button>
        </nav>
        <div class="feature-panel" role="region" aria-live="polite">
          <p class="panel-text">Learns from every solution attempt</p>
        </div>
      </div>
    </div>
    <div class="below-row">
      <div class="cta-stack">
        <svg class="icon-github" viewBox="0 0 144 144" aria-hidden="true" width="384" height="384">
          <path fill-rule="evenodd" clip-rule="evenodd" d="M12 2C6.477 2 2 6.477 2 12a10 10 0 0 0 6.838 9.49c.5.091.682-.217.682-.483 0-.237-.009-.866-.013-1.701-2.782.604-3.37-1.34-3.37-1.34-.455-1.157-1.11-1.466-1.11-1.466-.907-.62.069-.607.069-.607 1.003.071 1.53 1.03 1.53 1.03.892 1.528 2.341 1.087 2.91.831.091-.647.35-1.087.636-1.338-2.221-.253-4.555-1.111-4.555-4.944 0-1.091.39-1.984 1.029-2.682-.103-.253-.446-1.272.098-2.65 0 0 .84-.269 2.75 1.025A9.564 9.564 0 0 1 12 7.07c.851.004 1.707.115 2.507.337 1.909-1.294 2.748-1.025 2.748-1.025.546 1.378.203 2.397.1 2.65.64.698 1.028 1.592 1.028 2.682 0 3.842-2.338 4.687-4.566 4.936.359.31.679.922.679 1.858 0 1.34-.012 2.42-.012 2.75 0 .268.18.579.688.481A10 10 0 0 0 22 12c0-5.523-4.477-10-10-10Z" fill="currentColor"/>
        </svg>
        <div class="cta">
          <a class="cta-link" href="https://github.com/lossless-group/cilantro-site" target="_blank" rel="noopener noreferrer">
            Available as a Claude Code Plugin
          </a>
        </div>
      </div>

      <div class="right reveal" style="--delay: 0.1s">
        <img class="claude-logo" src="https://ik.imagekit.io/xvpgfijuw/parslee/bannerFor__Claude-Code.webp" alt="Claude Code Plugin" width="320" height="160" />
      </div>
    </div>

  </div>

  <style>
    :root {
      --matrix-green: #00ff9c;
      --matrix-dark: #0b0f0a;
      --matrix-darker: #070a08;
    }

    .hero {
      position: relative;
      background: radial-gradient(1200px 600px at 20% 0%, rgba(0,255,156,0.15), transparent 60%),
                  radial-gradient(900px 500px at 80% 10%, rgba(0,255,156,0.1), transparent 55%),
                  linear-gradient(180deg, var(--matrix-dark), var(--matrix-darker));
      color: #d6ffe8;
      overflow: hidden;
    }

    /* Subtle matrix grid */
    .hero::before {
      content: "";
      position: absolute;
      inset: 0;
      background-image:
        linear-gradient(rgba(0,255,156,0.06) 1px, transparent 1px),
        linear-gradient(90deg, rgba(0,255,156,0.06) 1px, transparent 1px);
      background-size: 24px 24px, 24px 24px;
      mask-image: radial-gradient(1000px 500px at 50% 0%, rgba(0,0,0,0.65), transparent 70%);
      pointer-events: none;
    }

    .container { max-width: 1120px; margin: 0 auto; padding: 56px 20px; }
    .content { display: grid; grid-template-columns: 1fr; gap: 24px; align-items: center; }
    @media (min-width: 900px) { .content { grid-template-columns: 1fr auto; gap: 32px; } }

    .left { display: grid; gap: 14px; align-content: start; }
    .logo { width: 80px; height: 80px; filter: drop-shadow(0 0 18px rgba(0,255,156,0.4)); border-radius: 16px; }
    .claude-logo { width: 320px; height: auto; filter: drop-shadow(0 0 18px rgba(0,255,156,0.4)); border-radius: 12px; }
    .title { font-size: clamp(2.25rem, 5.5vw, 4rem); line-height: 1.05; font-weight: 800; letter-spacing: -0.01em; color: var(--matrix-green); text-shadow: 0 0 12px rgba(0,255,156,0.25); }
    .subtitle { font-size: var(--text-xs); font-weight: 600; color: #c0ffe0; line-height: 1.5; }
    .copy { color: #b3ffdb; max-width: 64ch; font-size: var(--text-xs); line-height: 1.6; }
    .right { display: grid; place-items: center; }
    .features { display: flex; flex-wrap: wrap; gap: 10px; align-items: center; }
    .cta { margin-top: 6px; }
    .cta-link { display: inline-flex; align-items: center; gap: 8px; color: #0b0f0a; background: var(--matrix-green); padding: 8px 12px; border-radius: 10px; font-weight: 700; font-size: var(--text-xs); text-decoration: none; box-shadow: 0 8px 24px rgba(0,255,156,0.2), inset 0 0 0 1px rgba(0,0,0,0.15); }
    .icon-github { width: 384px; height: 384px; color: currentColor; }
    .cta-link:hover { box-shadow: 0 12px 34px rgba(0,255,156,0.28), inset 0 0 0 1px rgba(0,0,0,0.2); transform: translateY(-1px); transition: transform 200ms ease, box-shadow 200ms ease; }
    /* removed banner-wrap; logo moved to right content */

    .below-row { display: grid; gap: 14px; margin-top: 6px; align-items: center; justify-items: center; }
    @media (min-width: 900px) { .below-row { grid-template-columns: 1fr 1fr; } }
    .cta-stack { display: grid; gap: 2rem; place-items: center; }
    .feature-tabs { display: grid; gap: 10px; margin-top: 12px; }
    .tab-list { display: flex; flex-wrap: wrap; gap: 8px; }
    .tab-btn { appearance: none; border: 1px solid rgba(0,255,156,0.28); background: rgba(0,255,156,0.08); color: #d6ffe8; padding: 7px 10px; border-radius: 10px; font-weight: 600; cursor: pointer; transition: background 150ms ease, box-shadow 150ms ease; font-size: var(--text-xs); }
    .tab-btn::before { content: ""; display: inline-block; width: 6px; height: 6px; margin-right: 8px; border-radius: 50%; background: var(--matrix-green); box-shadow: 0 0 6px rgba(0,255,156,0.35); border: 1px solid rgba(11,15,10,0.45); }
    .tab-btn:hover { background: rgba(0,255,156,0.14); box-shadow: 0 8px 24px rgba(0,255,156,0.18); }
    .tab-btn.active { background: var(--matrix-green); color: #0b0f0a; box-shadow: 0 10px 28px rgba(0,255,156,0.22); }
    .feature-panel { background: rgba(0,255,156,0.06); border: 1px solid rgba(0,255,156,0.18); border-radius: 12px; padding: 12px 14px; }
    .panel-text { color: #c0ffe0; }

    /* Hero layout row targeting */
    .below-row:first-of-type { grid-template-columns: 1fr; }
    @media (min-width: 900px) { .below-row:first-of-type { grid-template-columns: 1fr; } }

    .below-row:nth-of-type(2) {
      display: grid;
      grid-template-columns: 1fr;
      grid-template-rows: auto auto;
      align-items: center;
      justify-items: center;
      row-gap: 2rem;
      column-gap: 14px;
      margin-top: 12px;
    }
    @media (min-width: 900px) { .below-row:nth-of-type(2) { grid-template-columns: 1fr 1fr; } }
    .below-row:nth-of-type(2) .icon-github { grid-column: 1; grid-row: 1; }
    .below-row:nth-of-type(2) .cta { grid-column: 1; grid-row: 2; }
    .below-row:nth-of-type(2) .right { grid-column: 2; grid-row: 1 / span 2; place-items: center; }

    /* Layout overrides to center stacks and align columns */
    .below-row { align-items: center; justify-items: center; }
    @media (min-width: 900px) { .below-row { grid-template-columns: 1fr 1fr; } }
    .cta-stack { display: grid; gap: 2rem; place-items: center; }

    /* Soft reveal */
    .reveal { opacity: 0; transform: translateY(16px); transition: opacity 700ms ease, transform 700ms ease; transition-delay: var(--delay, 0s); }
    .reveal.in { opacity: 1; transform: translateY(0); }

    @media (prefers-reduced-motion: reduce) {
      .reveal { transition: none; opacity: 1; transform: none; }
    }
  </style>

  <script type="module">
    import { setupRevealObserver } from '@utils/revealObserver.ts';
    document.addEventListener('DOMContentLoaded', () => {
      setupRevealObserver({
        selector: '.reveal',
        inViewClass: 'in',
        rootMargin: '-100px 0px',
        threshold: 0.1,
        unobserveOnReveal: 'always'
      });

      // Tabs logic
      const featureMap = {
        'persistent-memory': 'Learns from every solution attempt',
        'semantic-retrieval': 'Vector search finds relevant patterns',
        'code-first-generation': 'No diff parsing failures',
        'local-storage': 'Privacy-first JSON storage in ~/.neo directory',
        'model-agnostic': 'Works with any LM provider',
        'claude-code-plugin': "Integrates seamlessly with Anthropic's Claude models and CLI."
      };
      const tabsWrap = document.querySelector('.feature-tabs');
      if (tabsWrap) {
        const buttons = tabsWrap.querySelectorAll('.tab-btn');
        const panelText = tabsWrap.querySelector('.panel-text');
        const setActive = (key) => {
          buttons.forEach((btn) => {
            const isActive = btn.dataset.key === key;
            btn.classList.toggle('active', isActive);
            btn.setAttribute('aria-selected', isActive ? 'true' : 'false');
          });
          panelText.textContent = featureMap[key] || '';
        };
        buttons.forEach((btn, idx) => {
          btn.setAttribute('role', 'tab');
          btn.addEventListener('click', () => setActive(btn.dataset.key));
          if (idx === 0) btn.classList.add('active');
        });
        setActive(buttons[0]?.dataset.key);
      }
    });
  </script>
</section>