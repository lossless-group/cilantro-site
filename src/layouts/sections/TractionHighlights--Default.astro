---
// TractionHighlights--Default.astro
// Ported from React to Astro with CSS-only motion (no external libs).
// Implements two traction cards and a logo strip with reveal-on-scroll.
import ChipBasic from '../../components/Chip--Basic.astro';
---
<section id="about" class="traction" aria-label="Traction">
  <div class="container">
    <!-- Main traction cards -->
    <div class="cards">
      <!-- Card 1 - Already in Use -->
      <div class="card reveal" style="--delay: 0s">
        <div class="card-head">
          <div class="icon-chip" data-variant="a">
            <svg class="icon" viewBox="0 0 24 24" width="32" height="32" fill="none" stroke="var(--accent)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
              <path d="M16 14c2.21 0 4 1.79 4 4v2H12v-2c0-2.21 1.79-4 4-4z" />
              <circle cx="16" cy="9" r="3" />
              <path d="M8 14c2.21 0 4 1.79 4 4v2H2v-2c0-2.21 1.79-4 4-4z" />
              <circle cx="8" cy="9" r="3" />
            </svg>
          </div>
          <div class="head-text">
            <h3 class="title">Already in Use</h3>
            <div class="bar"></div>
          </div>
        </div>
        <p class="copy">
          Parslee is already live with select beta customers — helping teams extract structured data, track obligations, and turn documents into usable knowledge.
        </p>
        <div class="foot">
          <div class="avatars">
            <div class="avatar">✓</div>
            <div class="avatar">✓</div>
            <div class="avatar">✓</div>
            <div class="avatar">✓</div>
          </div>
          <span class="foot-note">Active beta users</span>
        </div>
      </div>

      <!-- Card 2 - Built by Experts -->
      <div class="card reveal" style="--delay: 0.2s">
        <div class="card-head">
          <div class="icon-chip" data-variant="b">
            <svg class="icon" viewBox="0 0 24 24" width="32" height="32" fill="none" stroke="var(--secondary)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
              <circle cx="12" cy="12" r="9" />
              <path d="M12 7l2 4h4l-3.2 2.3L16 17l-4-2.2L8 17l1.2-3.7L6 11h4z" />
            </svg>
          </div>
          <div class="head-text">
            <h3 class="title">Built by Experts</h3>
            <div class="bar"></div>
          </div>
        </div>
        <p class="copy">
          Parslee is developed by a team leveraging years of experience in secure, high-performance software systems.
        </p>
        <div class="foot">
          <ChipBasic size="sm" showDot={false}>
            <svg slot="icon" viewBox="0 0 24 24" width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
              <rect x="3" y="7" width="18" height="14" rx="2" />
              <path d="M7 7V3h10v4" />
              <path d="M7 12h10" />
            </svg>
            NYSE: SOAR
          </ChipBasic>
        </div>
      </div>
    </div>

    <!-- Logo strip placeholder -->
    <div class="logos reveal" style="--delay: 0.4s">
      <p class="logos-note">Trusted by teams in legal, finance, and operations</p>
      <div class="logos-strip">
        <ChipBasic label="Legal" style="--d: 0.6s" />
        <ChipBasic label="Finance" style="--d: 0.7s" />
        <ChipBasic label="Operations" style="--d: 0.8s" />
        <ChipBasic label="HR" style="--d: 0.9s" />
        <ChipBasic label="Compliance" style="--d: 1.0s" />
      </div>
    </div>
  </div>
</section>

<style>
  /* Use brand tokens instead of local overrides */

  .traction { background: var(--background); padding: 96px 0; }
  @media (min-width: 1024px) { .traction { padding: 128px 0; } }
  .container { max-width: 1120px; margin: 0 auto; padding: 0 24px; }

  .cards { display: grid; grid-template-columns: 1fr; gap: 24px; margin-bottom: 64px; }
  @media (min-width: 768px) { .cards { grid-template-columns: 1fr 1fr; } }

  .card { background: var(--card); border: 1px solid var(--border); border-radius: 24px; padding: 32px; box-shadow: 0 12px 24px rgba(0,0,0,0.06); transition: box-shadow 300ms ease, transform 300ms ease; }
  .card:hover { box-shadow: 0 16px 32px rgba(0,0,0,0.1); transform: translateY(-2px); }

  .card-head { display: flex; align-items: flex-start; gap: 16px; margin-bottom: 20px; }
  .icon-chip { padding: 12px; border-radius: 16px; background: rgba(0,0,0,0.04); }
  .icon-chip[data-variant="a"] { background: color-mix(in oklab, var(--accent-a) 12%, white); }
  .icon-chip[data-variant="b"] { background: color-mix(in oklab, var(--accent-b) 12%, white); }
  .icon { display: block; }

  .head-text { display: grid; gap: 6px; }
  .title { font-family: var(--font-sans); font-size: clamp(1.5rem, 3vw, 2rem); color: var(--foreground); margin: 0; }
  .bar { width: 48px; height: 6px; border-radius: 999px; background-image: linear-gradient(90deg, var(--accent-a), var(--accent-b)); }

  .copy { font-family: var(--font-sans); font-size: var(--text-lg); color: var(--muted-foreground); line-height: 1.7; }

  .foot { margin-top: 24px; display: flex; align-items: center; gap: 12px; }
  .avatars { display: inline-flex; align-items: center; }
  .avatar { width: 32px; height: 32px; border-radius: 999px; background-image: linear-gradient(135deg, var(--accent-a), var(--accent-b)); border: 2px solid var(--card); display: inline-flex; align-items: center; justify-content: center; color: var(--accent-foreground); font-size: 0.8rem; margin-left: -8px; }
  .avatar:first-child { margin-left: 0; }
  .foot-note { font-family: var(--font-sans); font-size: var(--text-sm); color: var(--muted-foreground); }

  /* Pill styles removed; using ChipBasic for better theme contrast */

  .logos { text-align: center; }
  .logos-note { font-family: var(--font-sans); font-size: var(--text-sm); color: var(--muted-foreground); margin-bottom: 24px; letter-spacing: 0.08em; text-transform: uppercase; }
  .logos-strip { display: flex; justify-content: center; align-items: center; gap: 16px; flex-wrap: wrap; opacity: 1; }
  /* Reveal timing applied to chips via global selector to pierce scoping */
  :global(.chip) { opacity: 0; transform: scale(0.95); transition: opacity 400ms ease, transform 400ms ease; transition-delay: var(--d, 0s); }
  :global(.chip.in) { opacity: 1; transform: scale(1); }

  /* Reveal on scroll */
  .reveal { opacity: 0; transform: translateY(24px); transition: opacity 600ms ease, transform 600ms ease; transition-delay: var(--delay, 0s); }
  .reveal.in { opacity: 1; transform: translateY(0); }
</style>

<script type="module">
  import { setupRevealObserver } from '@utils/revealObserver.ts';
  function onReady(fn) {
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', fn);
    } else {
      fn();
    }
  }

  onReady(() => {
    setupRevealObserver({
      selector: ['.reveal', '.chip'],
      inViewClass: 'in',
      rootMargin: '-100px 0px',
      threshold: 0.1,
      unobserveOnReveal: 'always'
    });
  });
</script>